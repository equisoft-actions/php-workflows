name: PHP Library

on:
  workflow_call:
    inputs:
      checks:
        description: |
          List of enabled check separated by comma.
          default: phpunit,phpcs,psalm
          available checks: phpunit,phpcs,psalm,qodana
        required: false
        default: "phpunit,phpcs,psalm"
        type: string
      report-retention-days:
        description: "Duration in days to preserve reports."
        required: false
        default: "5"
        type: string
      working-directory:
        description: "Workflow working directory"
        default: '.'
        required: false
        type: string
      php-version:
        description: 'Setup PHP version.'
        default: '8.1'
        required: false
        type: string
      extensions:
        description: 'Setup PHP extensions.'
        required: false
        type: string
      phpunit-extra-args:
        description: 'Provide extra arguments to phpunit check'
        default: ''
        required: false
        type: string
      psalm-extra-args:
        description: 'Provide extra arguments to psalm check'
        default: '--no-cache --no-diff'
        required: false
        type: string
      slack-channel:
        description: |
          The Slack channel where the notification will be sent.
          Defaults to $ {{ github.event.repository.custom_properties.ci_slack_channel }}.
        required: false
        type: string
    secrets:
      GPR_KEY:
        description: Personal access token to fetch private repos
        required: false
      SLACK_BOT_TOKEN:
        description: The bot token used to authenticate with Slack.
        required: true

env:
  php-cache-key: v1

jobs:
  phpunit:
    name: PHPUnit
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    if: contains(inputs.checks, 'phpunit')

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup PHP
        uses: equisoft-actions/setup-php@v1
        with:
          php-version: ${{ inputs.php-version }}
          extensions: ${{ inputs.extensions }}
          cache-key: ${{ env.php-cache-key }}

      - name: Composer install
        uses: equisoft-actions/composer@v1
        with:
          gpr-key: ${{ secrets.GPR_KEY}}
          working-directory: ${{ inputs.working-directory }}

      - name: PHPUnit
        uses: equisoft-actions/phpunit@v1
        with:
          report-name: phpunit.php-${{ inputs.php-version }}.junit.xml
          coverage-report-name: phpunit.php-${{ inputs.php-version }}clover.xml
          working-directory: ${{ inputs.working-directory }}
          report-retention-days: ${{ inputs.report-retention-days }}
          extra-args: ${{ inputs.phpunit-extra-args }}

  psalm:
    name: Psalm
    runs-on: ubuntu-latest
    if: contains(inputs.checks, 'psalm')

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup PHP
        uses: equisoft-actions/setup-php@v1
        with:
          php-version: ${{ inputs.php-version }}
          extensions: ${{ inputs.extensions }}
          cache-key: ${{ env.php-cache-key }}

      - name: Composer install
        uses: equisoft-actions/composer@v1
        with:
          gpr-key: ${{ secrets.GPR_KEY}}
          working-directory: ${{ inputs.working-directory }}

      - name : Psalm
        uses : equisoft-actions/psalm@v2
        with:
          working-directory: ${{ inputs.working-directory }}
          default-branch: ${{ github.event.repository.default_branch }}
          extra-args: ${{ inputs.psalm-extra-args }}
          php-version: ${{ inputs.php-version }}

  phpcs:
    name: PHP_Codesniffer
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    if: contains(inputs.checks, 'phpcs')

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup PHP
        uses: equisoft-actions/setup-php@v1
        with:
          php-version: ${{ inputs.php-version }}
          extensions: ${{ inputs.extensions }}
          cache-key: ${{ env.php-cache-key }}

      - name: Composer install
        uses: equisoft-actions/composer@v1
        with:
          gpr-key: ${{ secrets.GPR_KEY}}
          working-directory: ${{ inputs.working-directory }}

      - name : PHP_Codesniffer
        uses : equisoft-actions/phpcs@v2
        with:
          report-name: phpcs.php-${{ inputs.php-version }}.junit.xml
          default-branch: ${{ github.event.repository.default_branch }}
          working-directory: ${{ inputs.working-directory }}
          report-retention-days: ${{ inputs.report-retention-days }}

  qodana:
    name: Qodana
    runs-on: ubuntu-latest
    if: contains(inputs.checks, 'qodana')

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup PHP
        uses: equisoft-actions/setup-php@v1
        with:
          php-version: ${{ inputs.php-version }}
          extensions: ${{ inputs.extensions }}
          cache-key: ${{ env.php-cache-key }}

      - name: Composer install
        uses: equisoft-actions/composer@v1
        with:
          gpr-key: ${{ secrets.GPR_KEY}}
          working-directory: ${{ inputs.working-directory }}

      - name: 'Qodana Scan'
        uses: JetBrains/qodana-action@v2025.1.1
        with:
          upload-result: true

  workflow-status:
    name: Workflow status
    runs-on: ubuntu-latest
    needs:
      - phpunit
      - psalm
      - phpcs
      - qodana
    if: always()
    steps:
      - name: Post workflow status
        uses: equisoft-actions/notify-workflow-status@v2
        with:
          needs: ${{ toJSON(needs) }}
          slack-enabled: ${{ github.event_name == 'push' }}
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack-channel: ${{ inputs.slack-channel || github.event.repository.custom_properties.ci_slack_channel }}
